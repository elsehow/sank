// Generated by CoffeeScript 1.9.1
(function() {
  var Bacon, getServerTime, getSynchronisedTimeProperty, getTimeDiffStream, moment, timediff;

  Bacon = require('baconjs');

  moment = require('moment');

  timediff = function(one, the_other) {
    return moment(the_other).diff(one);
  };

  getServerTime = function(timeDiff) {
    return moment().utc().add(timeDiff);
  };

  getTimeDiffStream = function(timeServerURL, updateTimeInterval) {
    var serverTimeResults, timeDiffStream, timeRequests;
    timeRequests = Bacon.interval(updateTimeInterval).map(function() {
      return {
        url: timeServerURL
      };
    });
    serverTimeResults = timeRequests.ajax();
    timeDiffStream = serverTimeResults.map(function(t) {
      return timediff(moment(t), moment());
    });
    return timeDiffStream;
  };

  getSynchronisedTimeProperty = function(timeDiffStream, pollLocalClockInterval) {
    var synchronisedTimeProperty, timeDiff;
    timeDiff = null;
    timeDiffStream.onValue(function(t) {
      return timeDiff = t;
    });
    synchronisedTimeProperty = Bacon.fromPoll(pollLocalClockInterval, function() {
      if (timeDiff) {
        return getServerTime(timeDiff);
      } else {
        return null;
      }
    }).toProperty();
    return synchronisedTimeProperty.filter(function(v) {
      if (v) {
        return v;
      }
    });
  };

  exports.getTimeDiffStream = getTimeDiffStream;

  exports.getSynchronisedTimeProperty = getSynchronisedTimeProperty;

}).call(this);
